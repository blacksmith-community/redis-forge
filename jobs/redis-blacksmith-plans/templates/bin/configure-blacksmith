#!/bin/bash
set -eu

PLANSRC=/var/vcap/jobs/redis-blacksmith-plans/plans
SVCROOT=/var/vcap/data/blacksmith/redis-forge/services
rm    -rf $SVCROOT
mkdir -p  $SVCROOT

# Copy the service definition stub for Blacksmith
cp $PLANSRC/service.yml $SVCROOT

<% p('plans').each do |id, plan| %>
##############################################
#
# Set up plan <%= id %>
#
PLANROOT="$SVCROOT/<%= id %>"
PLANTYPE="<%= plan["type"] || 'standalone' %>"

mkdir -p $PLANROOT
cat > $PLANROOT/plan.yml <<EOF
---
id: <%= id %>
name: <%= plan["name"] || id %>
limit: <%= plan["limit"] || 0 %>
description: |+
  <%= plan["description"] || 'no description provided' %>
EOF

for file in init credentials.yml manifest.yml; do
  cp $PLANSRC/$PLANTYPE/$file $PLANROOT/
done
chmod 0755 $PLANROOT/init

cat > $PLANROOT/params.yml <<EOF
---
# auto-generated by redis-blacksmith-plans
# for plan-id <%= id %> (<%= plan["name"] || id %>)
meta:
  size: <%= plan["vm_type"] || 'default' %>
  net:  <%= plan["network"] || 'redis-service' %>

  <% if plan["client_timeout"] %>
  client_timeout: <%= plan["client_timeout"] %>
  <% end %>
  <% if plan["client_tcpkeepalive"] %>
  client_tcpkeepalive: <%= plan["client_tcpkeepalive"] %>
  <% end %>
  <% if plan["client_connections"] %>
  client_connections: <%= plan["client_connections"] %>
  <% end %>
  <% if plan["lua_scripting_enabled"] %>
  lua_scripting_enabled: <%= plan["lua_scripting_enabled"] %>
  <% end %>
  <% if plan["type"] == "standalone" %>
  <% if plan["persist"] %>
  persistent: true
  disk: <%= plan["disk"] || 1_024 %>
  <% else %>
  persistent: false
  <% end %>
  <% end %>

  <% if plan["type"] == "cluster" && plan["masters"] > 0 %>
  masters:   <%= plan["masters"] %>
  replicas:  <%= plan["replicas"] || 1 %>
  instances: <%= plan["masters"] + plan["masters"] * (plan["replicas"] || 1) %>

  <% if plan["azs"] %>
  azs: <%= plan["azs"] %>
  <% end %>
  <% end %>
EOF



<% end %>
